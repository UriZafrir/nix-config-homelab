version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: 6iyyfc.nh8aoddyhc79myvr # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJpSmRCcVozMHRHZnpDelp3YTN6QnpNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5UQTVNall4TkRRNU16VmFGdzB6TlRBNU1qUXhORFE1TXpWYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBMXNLZlFpZXUyUDdxWS9ubG4vVTlxcTRrdnpLTlh6SEQ3MCtDCnRKUDVSaXlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVUFlZb0xlRkp0K1E5a3VzdwpZVjlqdVZ4Q0JuWXdCUVlESzJWd0EwRUFvajlDVWN3Vk9MekZTQjYvYURnVDFndEVIM1hNbW9ZMWREZUpocFV2CnIrdXNTYVlXQjhMVDNGOU9pZ2xJV2xmdGJFZlF3V1Vhd0ZZbXNCaVZxZURrRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJR2pZT3VDcCtLdzdZQ1BLSEpERU14NDB5TTBaTGVpang4NzBMQXJWSWVzUQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.33.3 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.

    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.

    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.

    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface

    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true

    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

    #       # # Wireguard specific configuration.

    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24

    #       # # Virtual (shared) IP address configuration.

    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1

    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com

    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld

    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.

    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.10.6 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Override (patch) settings in the default OCI runtime spec for CRI containers.

    # # override default open file limit
    # baseRuntimeSpecOverrides:
    #     process:
    #         rlimits:
    #             - hard: 1024
    #               soft: 1024
    #               type: RLIMIT_NOFILE

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: 0X-OTCR1QXYY_m4RSugl6klxXTvgPZiNkJBhcuISIok= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: wO1ooCdUMEFfokAX2hCjMl8dkVnz+vBm0ZtRezHfMmM= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.122.10:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos-cluster # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: zjgxix.adlkfcmrt93w2fzz # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: wfLBueX96ckf5Dd/tuLMpmvL+mQkNa3s/X+Y021GoO0= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRYkZoZmtyNnk2ZHdONUpXM3hhZ0ZaREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNRGt5TmpFME5Ea3pOVm9YRFRNMU1Ea3lOREUwTkRregpOVm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCT3Q0eEk5enBWc3J2U1VTL04zamU1R0hTakFEQXpNVVNWVnlSM0YyU1orb3crQWNnUVd0am9ERzJPUGgKYVhPM0c5WUQ5b3lWZjNiWGlabEgvc0RCMHFXallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUrdU1uOTJKOFV3WE1mRFY1UEpXbjlyZWhKTVF3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQVBDd3JGSzEKUzJnNTVVRTVDalZTQjVmK0JFNVBodVUxbXZQa0pkWW1RUXhKQWlCUUtLQkc0Rk9rWUxDTy80VVlkQXlhR1JJLwo0aXp3MjZzVlZDODdodXE4amc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJBOXMraklBcGpiWVRiKzJJY0pWenRtVkpCaFRLL1JnWXZxcHA1RHZ5cnRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNjNqRWozT2xXeXU5SlJMODNlTjdrWWRLTUFNRE14UkpWWEpIY1haSm42akQ0QnlCQmEyTwpnTWJZNCtGcGM3Y2IxZ1AyakpWL2R0ZUptVWYrd01IU3BRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFXZ0F3SUJBZ0lRRko5RDVObUxHVFBseDFNWSt5Nk8zREFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJMU1Ea3lOakUwTkRrek5Wb1hEVE0xTURreU5ERTBORGt6TlZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCUERuelA0SDhqaVErNkY2czJ3UFRxb3JLWW1waTFZY3MvQ21oVi9JalFkKy9PUmVpRGFPCmNaNDlIUTVtV0drdkNsMkZTODZLS0YwSXpUZTJ2d1pmRHZXallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVZNlBnVnZVS0g4bGR6SE9XSjhOVU9KUjR2TVV3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loCkFNeGRaSlNkaDk2N3IwK25qUjdXVnNXYjBCUEdPYW9GT1FwSkVQd2lOSW5vQWlFQTFoNld2Qm0zSk9vMXZuMUUKQ2xXdThOSW4wd1hEYmNkUFVCRE9ZSDZMdmlFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZXMkNmUzBXLzlwd0xCRFdJc2toWTRMTE9kWTQxa0FyaEs4VW5oWGpsYnFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOE9mTS9nZnlPSkQ3b1hxemJBOU9xaXNwaWFtTFZoeXo4S2FGWDhpTkIzNzg1RjZJTm81eApuajBkRG1aWWFTOEtYWVZMem9vb1hRak5ON2EvQmw4TzlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBd0xaOXJNM29wTmMwTU9Jc05yR2p4aVFkYVlNYXIyVmRpUzlWdnd2d0lxQUFYTUtuCmZhTG0vTTZKbDdvb0k0K2s3WGN5WmZzMFViWmRCeVVoaUVabmIzU3prWnB6L2xwSk0weUtzM3hlaG1ucXZvTFIKYUVOWlB2bmoyZU5wbnVsVGxMRWROQ1ppUzI4cGZTekx1ODV1R0VRRWRzQ2V6bVVOYUpqL29oT2hVekZ4VlNDcwpoRDN3dDZkc3M0ZGtrdjMrYUgyQnhXcWJETW9tT01sZjByNmMvVmRUYUlFcWptdGtnYUZid3dSWFBDRDlDZVJaCldsNUlQNjdQWEF1elZGK3F6RmNhd09CODd4NU1JSHVCWkpOdENJdE5xOFhnVWRIdU9TSWlvdktYY3p2T2hHRUwKajJGTUFaWmJLUVpMZHRSR1NESU1XK2N0RWI1OGVJNmxva0xzbmxUdmpkcURCdzhDbDh5dTJ3eE9GRlRpeVc4awo4eVRwOHZmY0NFTGRoTks2clNFaUdxMUlZbzF1ZDFrc2VLc1kxWU9oVXpXRDNEZFV3YWYzdHJ5WkNNUUxWdjJhCnB3TkJYRW5PV1YzVzVPWWxuaC9WWHBFVU1GRTZPZ1ZpeG9CTGxiQ3ZIZlVweTdFMlY1WXY2YkxGdFRpVjdLZEoKZlE5V0pFRmIwT3ZCODdaR3l2SkNvakxrTXdKZTBIdWpFM05xNTZ4Y09OaytTanpHTjMrOE02YTFIcjQrRXAxRwoyOHc5RjFFOE8yMmV2bHkrc3VJMUtZT0s2T1YwbkxVc1VMQ1VWZ1F1ZkpyTmp1d3FrNWhqaVA0c2JTemFtODR0Cjd5SFF0NlhhZEtwai96OW42RFVQU0Ruc2RKNmc4N2liWE9nT2R5dmVXNTdGVjJyWXZ4NW1pQnYyTTUwQ0F3RUEKQVFLQ0FnQlR3SHZKMkFzZGFMR3o5UGVHSlptcGlSU0hRSVVlYVExSGk1eldWSmZlVkc4VDRUenRheGk4RWY3VwpRLzhoeFZIR0tpRnJGTXRlSDhVNlQ3Yk5CTnY3SWxyUUVySUtmcTZGYnVSd3NNSmI1RGd5NTZPZWpuYUEyaFZlCkltbEt1TmlzTEhVbXJ1L1ZITkNKS0NpNnpESW90WmJERFY5M0Q0L09QNEFKcmtKVVo0NTdrcUduTDB3b1pNam4KRlJadWs1ZzNUU1JTNmN2TXVTWDNVLzBqRjlnZWVnOHp3YjcrK2tsSjFSaU9IcHJTOVB0RGkwd1I3QnUySVlEWQozZlRuM0ZQY1RwYS84RkFiazYwK0NLN3BTUEQvMzVxMzVsMWc4YjE0Y3c5ZWhkT3dMdlBIc0cxWHVNOVJlVWpSCkFYMVdmVmEyRlpvdGJzQzFqM1dFNTJtd3BTa3p1NGI1eEprS1ZKNEpoZG9Na21HQWJYSHY2cE1hYlBuSWM5S1QKY0cwWmpram45VEtIYVppbS9jZE9IRVhYYTJid3MrNE9MdzNoVzBEY1d5Z3Uxb25kbURnRlorQSs0S0pWV004YgpBUDhYVzNkV0RTdTJ5c3YxZTVWdjNhZjQwU2VlQ01YY3FVNDc0RUlLQU8rZGdYM0d0bVFlNm52RFVVdG9IMTNkClEvSzJSUk42bFhuR0NFMEJpWlFWNThVZFI1ZHBESGc4bjVyWDRvMTQ3cWM1cHVMRHJkSHZyZzRPdDdxbkpQUjgKS05xblVYVzNIc3VvcFJZOXdpTVF1MnM5bmpiRTAzNGJoK2I3RTgrK2NJUkdOa3VDTkZDejlqUDFwSjFvSFNpegpUWVpWUWtPUU5mVUZRS3Jzd2JEaWpJdnlIdlR6K21oWUs5TnRCWWUvUTU2dnJpQ1pPUUtDQVFFQXdWODlNbyt5ClhZMGNMLzRmNDdwSWdJSFBPUlVuc0F2TEo3UmdyNmx2UXBUeVh6UjJKVEQ4Q1pDS1V4bHRxQjZTN3V4VmQ1VGMKZ3duVTlQdlY2eDk2UVFoWWlialhTV2hMTjRCNnFLMGpUcHB1U01oTlQ0SjJjN2I4MjIxN3NxcStWWG1HbngxdwpRclU0cVN6Y2MwNS94eVRQejBFVXp6TlByTWpZL0VDVmxXaGNFRU1Tc25EYzJKVGVlalhSWnh6QVhNYlVmNDBDCjF0MmVMQVplWXFYUEFGalNoWmtTaHJPbDUwS1pqcUZVcStxUVR5anByTkF1MW14S04rYTcwQ1crZUdtVENBVmsKRkh4dDhEWlMrY21tV2FjOTRoZ011K2NySzFqcitCSzFSQmxJVEZzaHA0czBzMDhqSDVaaW9tWmp1K0pDdHB1SApnMS9IcUNiUWxPcmpsd0tDQVFFQS95Q1pVZWlwbmJ4VGVObDZ2dVRxYytFQ2xXRnpzaGZVR2ViN2pSWXdtdHRwCjJHNGhybVh6a2l4Z0UxdjV1YXJKTzdlNCtRVmdKNXZFY3p3M0hhYmtRZjY0RHZ3RG1QbjJvdGptYXlkcWh5U2kKK1RWRFBsaEEzd092TFhKd1QwQlE0K3QyVGFDWXg3MUVYSk40RnNHQXVlb25NVm5PT0dyd1BTZlhuYTEySllibwo1YW1IMDBJQzJ5RExGcGY2YUFPVkRwc1VwU0F0MTF6UjgzdGZHMXVaQWY0NVVNWVo1YWc2Zi8vWGtuVW10Y3g5CmEvOFQ2b05uL21FTGxpdFBGR3AzVCtyMWZkVy9wSldXMmVSOWpydlRtNUx0SE8xK09xdUJqOVlrNCtyVjBFenUKUEdQZ01wQ1dIQ0RkQWFlamkrWHNnYkJBRHNNUjlWZmlHQVNMbXF2NDZ3S0NBUUVBcDJManZKSzYyVlErNUNSYwpRbXFNUEFFaCtjMmdMem5tUDVaYVkzU05oTnNkK3QrVXJaajdjdVFWZU4xNEdLRnVtemNrdklDMWFSRG5zTEVXCmVaTWo1b3RzNkxxQ1VWN2dUVWovNUdjTE93MWZEYzJsYm9BR1BTQlhQVEpHYzJCdHBkdXVkcW1xOVhPZGVvUUUKeUNOWlpHOHZHNzdBWHFPU0FvVlJudm5oQWhYMkszV0VCOGEreFJRSWlVMXcySXNBME02a1AwMDIrZnVZNFk4Wgp3TmE2bXhoSUU3RnZZZjY4UzdWUTZ6QW45VEQwZmpGeUpVK0lXOEFkZHNwYUpWR20wT0RDajV6ckJ2aTJ5Y3FjCmhQRFMrS1JXWXhKaVkzMDExeTRBQlJ0Y29YZ3BKejl6b0c1VnppbGd4QVVQbUhoOU9MUWcvNlVkNXREUUtYUi8KOVlobVBRS0NBUUFVcXRKZ3hVVkFSdXBJSnUzL210RzNVMm4vS2ViU2JZVzhGMjhYVGMzZ0xaZ1VkVTk3TGowZQpBVVJETFRjOHFDNG5EVW9KdWpyQTJxaCtZVWxodUl4VElFeE93bkdVS2VPbDY0WTI5ZmwyT3l5TW5aajE2dlpPCldxRU5RSEVDcW9ZakFJY1Q0TWVmbnFCMEUyb3VCYnprMHFnY0lsZEhVTHBuYWR2WXBSMm1DcGpCU2d0N3ZLUTQKbGg1OWxSQXU3dU5iVElyT21aMjlEWUxnZzRULzFWcSt3NVpuQ2JVOVduUnF2Qkg5aGtuOWZqUkcxR0lMcEZ0LwpTdU5DWmYzQS9LTHZzV3Z6cHFZZ3NoR0hVekFzcU9DS2dNdCtoV3F0WEFsaDJvb2dnSHlUcERmRVlwN2QyY0tmClFyWkVsUXoxbjBtYWMrbXNpSGJpOWh5VnI0Q1RwZ3pEQW9JQkFIRmU4TzNORC9LYWJ2ajJjK2VIT05XVU4vSVcKa2xQd1ZLQ3JabEIxRlNhQ1ZBd2pXdWl3S3ZHMzJweERnNzZLZkJIUENLajdYTHRtUHh5ZjY4TUs4Z21STGhBUgpsQ3dRQldSK1FEL1JDaVFmb2Y1c2tPdEU2ZWhKd1UvanNkTk1UKzJpdVZaYWZpdGxpYUtJdTJvaXpwUFpuZmVkClhFNG1JaWp4OU9WT09QSUpIdDFIelI2QmlkNThCODBUNFh2YWRKQ0RZZUhwejZ4UnE0K2tncXNOMHNpemF6R20KVm94VDhLRHF0dDZSTzR4L3hZOVFRS2p2TXlodG9ZT01ZV0N6MlBQTEs4SVVOcnpLbHljc1UyTlZhQ2l6aWNndgpERkhzNVRkWlZldnJ5ckJITVpLZ3NJdmVOR0IrRWNWNWpWUEU3bHp3Q245NDRZNXpkQjNhWktBbWllND0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.33.3 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.122.10
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
        
        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
        # authorizationConfig:
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: webhook # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: Deny
        #         matchConditionSubjectAccessReviewVersion: v1
        #         matchConditions:
        #             - expression: has(request.resourceAttributes)
        #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: in-cluster-authorizer # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: NoOpinion
        #         matchConditionSubjectAccessReviewVersion: v1
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.33.3 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.33.3 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.33.3 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtiS2g5UTJrVGxNbFJJekwzbjBxM0l3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TlRBNU1qWXhORFE1TXpWYUZ3MHpOVEE1TWpReE5EUTVNelZhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRblo2ME9ORGxBCm1ZNDkwNnp2NVZ6M3VoeFMyVGc1L2J2RC9tOUtzbm45cTJoYlprSTJvcjYyQmxmVXpibXprQXVnY1JkSkd3cDIKL255THY3NkN4eGVDbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkU5akIvS2NoVEhuClpVM1dDdS9HdXg4VXBDdVJNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURNZGoyWUVxeVRITnJDSVQxZnhPUEYKR2thSGY5T2VFUkFFdmNSTk9WRllZZ0lnQUxEN242THoya01jN1VCT2VFd1Z3Q3ZmNDFMUlpBeTVvczhLcWNxNwpTZ3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU10RTlKTWVjVXZKVGp2WFBjbDRCblVSYlVzNGNGVXcxdUNzaVhDZ3dmdVFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSjJldERqUTVRSm1PUGRPczcrVmM5N29jVXRrNE9mMjd3LzV2U3JKNS9hdG9XMlpDTnFLKwp0Z1pYMU0yNXM1QUxvSEVYU1JzS2R2NThpNysrZ3NjWGdnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.21

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.12.1 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
